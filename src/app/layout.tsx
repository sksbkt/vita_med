import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import MuiProvider from "@/providers/muiProvider";
import StoreProvider from "@/providers/storeProvider";
import ResponsiveAppBar from "@/components/mui/NavBar";

import AuthWrapper from "@/providers/authWrapper";
import { prisma } from "@/lib/utils/prisma";
import { Role } from "@prisma/client";
import { Container } from "@mui/material";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // DummyUser();
  return (
    <html
      lang="en"
      // ? we need this "suppressHydrationWarning" here so we wont get the hydration error due to conflict
      suppressHydrationWarning
    >
      <body className={inter.className}>
        <StoreProvider>
          <AuthWrapper>
            <MuiProvider>
              <Container
                // ? gets rid of the default padding on MUI container
                disableGutters
                // ? gets rid of the default maxWidth on MUI container
                maxWidth={false}
              >
                {/* <HtmlClientSide> */}
                <ResponsiveAppBar />
                {children}
                {/* </HtmlClientSide> */}
              </Container>
            </MuiProvider>
          </AuthWrapper>
        </StoreProvider>
      </body>
    </html>
  );
}

async function DummyUser() {
  "use server";
  const newUser = await prisma.user.create({
    data: {
      userName: "foo",
      firstName: "foo first",
      lastName: "bar last",
      password: "bar",
      role: [Role.ADMIN],
    },
  });
}
